[{"C:\\xampp\\htdocs\\reactjs-test\\aprendiendoreact\\src\\index.js":"1","C:\\xampp\\htdocs\\reactjs-test\\aprendiendoreact\\src\\reportWebVitals.js":"2","C:\\xampp\\htdocs\\reactjs-test\\aprendiendoreact\\src\\App.js":"3","C:\\xampp\\htdocs\\reactjs-test\\aprendiendoreact\\src\\components\\Micomponente.js":"4"},{"size":511,"mtime":1610470895642,"results":"5","hashOfConfig":"6"},{"size":362,"mtime":499162500000,"results":"7","hashOfConfig":"6"},{"size":834,"mtime":1610659968034,"results":"8","hashOfConfig":"6"},{"size":7223,"mtime":1610660005938,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"938gq4",{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19"},"C:\\xampp\\htdocs\\reactjs-test\\aprendiendoreact\\src\\index.js",[],["20","21"],"C:\\xampp\\htdocs\\reactjs-test\\aprendiendoreact\\src\\reportWebVitals.js",[],"C:\\xampp\\htdocs\\reactjs-test\\aprendiendoreact\\src\\App.js",[],"C:\\xampp\\htdocs\\reactjs-test\\aprendiendoreact\\src\\components\\Micomponente.js",["22","23","24","25"],"import React, {Component} from 'react';\r\n//Necesario bootstrap \r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n//Necesario reactstrap\r\nimport {\r\n    Table,\r\n    Button,\r\n    Container,\r\n    Modal,\r\n    ModalBody,\r\n    ModalHeader,\r\n    FormGroup,\r\n    ModalFooter,\r\n  } from \"reactstrap\";\r\n\r\n  // Mi base de datos\r\n  const data = [\r\n    { id: 1, compra: \"Camisa\", costo: \"100\" },\r\n    { id: 2, compra: \"Zapatos\", costo: \"10\" },\r\n    { id: 3, compra: \"Comida Rapida\", costo: \"20\" },\r\n    { id: 4, compra: \"Pan\", costo: \"5\" },\r\n    { id: 5, compra: \"Chori\", costo: \"30\" },\r\n    ];\r\n\r\nclass Micomponente extends Component{\r\n\r\n//estados\r\n    state = {\r\n        data: data,\r\n        form: {\r\n          id: \"\",\r\n          compra: \"\",\r\n          costo: \"\",\r\n        },\r\n        modallInsertar: false,\r\n        modallEditar: false,\r\n      };\r\n    \r\n      handleChange = (e) => {\r\n        this.setState({\r\n          form: {\r\n            ...this.state.form,\r\n            [e.target.name]: e.target.value,\r\n          },\r\n        });\r\n      };\r\n\r\n//modal insertar abrir\r\n      mostrarModalInsertar = () => {\r\n        this.setState({ modallInsertar: true });\r\n      };\r\n//modal insertar cerar\r\n      ocultarModalInsertar = () => {\r\n        this.setState({ modallInsertar: false });\r\n      };\r\n    \r\n//modal editar abrir\r\n      mostrarModalEditar = (registro) => {\r\n        this.setState({ modallEditar: true, form: registro });\r\n      };\r\n//modal editar cerar\r\n      ocultarModalEditar = () => {\r\n        this.setState({ modallEditar: false });\r\n      };\r\n    \r\n//insertar datos, importante el uso de let para el uso interno\r\n      insertar = () => {\r\n        let valorNuevo = { ...this.state.form };\r\n        valorNuevo.id = this.state.data.length + 1;\r\n        let lista = this.state.data;\r\n        lista.push(valorNuevo);\r\n        this.setState({ data: lista, modallInsertar: false });\r\n      };\r\n    \r\n//editar datos, importante el uso de let para el uso interno\r\n      editar = (dato) => {\r\n        let contador=0;\r\n        let lista=this.state.data;\r\n        lista.map((registro)=>{\r\n          if(dato.id==registro.id){\r\n            lista[contador].compra=dato.compra;\r\n            lista[contador].costo=dato.costo;\r\n          }\r\n          contador++\r\n        })\r\n        this.setState({data: lista,  modallEditar: false});\r\n    \r\n      }\r\n    \r\n//eliminar datos , importante el uso de let para el uso interno\r\n      elimiar=(dato)=> {\r\n        let opcion=window.confirm(\"Estas seguro que quieres eliminar? \" +dato.id);\r\n        if(opcion){\r\n            let contador=0;\r\n            let lista = this.state.data;\r\n          lista.map((registro)=>{\r\n            if(registro.id==dato.id){\r\n              lista.splice(contador, 1);\r\n            }\r\n            contador++;\r\n          });\r\n          this.setState({data: lista});\r\n        }\r\n      }\r\n\r\n    render(){\r\n\r\n        return(\r\n\r\n//div que envuelve todo, necesario para poder incluir varios elementos\r\n            <div className=\"mi-componente\">\r\n                <Container>\r\n              <br />\r\n              <Button color=\"success\" onClick={() => this.mostrarModalInsertar()}>\r\n                {\" \"}\r\n                Insertar Nueva Gasto{\" \"}\r\n              </Button>\r\n              <br />\r\n              <br />\r\n    \r\n              <Table>\r\n                <thead >\r\n                  <tr>\r\n                    <th>id</th>\r\n                    <th>Compra</th>\r\n                    <th>Precio</th>\r\n                    <th>Acciones</th>\r\n                  </tr>\r\n                </thead>\r\n    \r\n                <tbody>\r\n                  {this.state.data.map((elemento) => (\r\n                    <tr>\r\n                      <td>{elemento.id}</td>\r\n                      <td>{elemento.compra}</td>\r\n                      <td>{elemento.costo}$</td>\r\n                      <td>\r\n                        <Button color=\"primary\"  onClick={() => this.mostrarModalEditar(elemento)}> \r\n                         Editar\r\n                        </Button>\r\n                        {\"  \"}\r\n                        <Button color=\"danger \" onClick={() => this.elimiar(elemento)}>Eliminar</Button>\r\n                      </td>\r\n                    </tr>\r\n                  ))}\r\n                </tbody>\r\n              </Table>\r\n            </Container>\r\n            <Modal isOpen={this.state.modallInsertar}>\r\n              <ModalHeader>\r\n                <div>\r\n                  <h3> Insertar Nuevo</h3>\r\n                </div>\r\n              </ModalHeader>\r\n              <ModalBody>\r\n                <FormGroup>\r\n                  <label>Id:</label>\r\n                  <input\r\n                    className=\"form-control\"\r\n                    readOnly\r\n                    type=\"text\"\r\n                    value={this.state.data.length + 1}\r\n                  />\r\n                </FormGroup>\r\n                <FormGroup>\r\n                  <label>Compra:</label>\r\n                  <input\r\n                    className=\"form-control\"\r\n                    name=\"compra\"\r\n                    type=\"text\"\r\n                    onChange={this.handleChange}\r\n                  />\r\n                </FormGroup>\r\n                <FormGroup>\r\n                  <label>Precio:</label>\r\n                  <input\r\n                    className=\"form-control\"\r\n                    name=\"costo\"\r\n                    type=\"text\"\r\n                    onChange={this.handleChange}\r\n                  />\r\n                </FormGroup>\r\n              </ModalBody>\r\n              <ModalFooter>\r\n                <Button color=\"primary\" onClick={() => this.insertar()}>\r\n                  Insertar\r\n                </Button>\r\n                <Button color=\"danger\" onClick={() => this.ocultarModalInsertar()}>\r\n                  Cancelar\r\n                </Button>\r\n              </ModalFooter>\r\n            </Modal>\r\n            <Modal isOpen={this.state.modallEditar}>\r\n              <ModalHeader>\r\n                <div>\r\n                  <h3> Insertar Nuevo</h3>\r\n                </div>\r\n              </ModalHeader>\r\n              <ModalBody>\r\n                <FormGroup>\r\n                  <label>Id:</label>\r\n                  <input className=\"form-control\" readOnly type=\"text\" value={this.state.form.id} />\r\n                </FormGroup>\r\n                <FormGroup>\r\n                  <label>Compra:</label>\r\n                  <input className=\"form-control\" name=\"compra\" type=\"text\" onChange={this.handleChange} value={this.state.form.compra}\r\n                  />\r\n                </FormGroup>\r\n                <FormGroup>\r\n                  <label>Precio:</label>\r\n                  <input className=\"form-control\" name=\"costo\" type=\"text\" onChange={this.handleChange}  value={this.state.form.costo} />\r\n                </FormGroup>\r\n              </ModalBody>\r\n              <ModalFooter>\r\n                <Button color=\"primary\"  onClick={()=>this.editar(this.state.form)}>Actualizar</Button>\r\n                <Button color=\"danger\" onClick={()=>this.ocultarModalEditar()}>\r\n                  Cancelar\r\n                </Button>\r\n              </ModalFooter>\r\n            </Modal>\r\n\r\n        </div>\r\n\r\n\r\n        );\r\n    };\r\n\r\n};\r\n\r\n// exportarlo para utilizar\r\nexport default Micomponente;",{"ruleId":"26","replacedBy":"27"},{"ruleId":"28","replacedBy":"29"},{"ruleId":"30","severity":1,"message":"31","line":79,"column":29,"nodeType":"32","messageId":"33","endLine":79,"endColumn":31},{"ruleId":"34","severity":1,"message":"35","line":80,"column":21,"nodeType":"36","messageId":"37","endLine":80,"endColumn":23},{"ruleId":"30","severity":1,"message":"31","line":96,"column":31,"nodeType":"32","messageId":"33","endLine":96,"endColumn":33},{"ruleId":"34","severity":1,"message":"35","line":97,"column":27,"nodeType":"36","messageId":"37","endLine":97,"endColumn":29},"no-native-reassign",["38"],"no-negated-in-lhs",["39"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]